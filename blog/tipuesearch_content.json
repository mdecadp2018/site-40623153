{"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecadp2018/site-40623153 課程投影片: https://mdecadp2018.github.io/site-40623153/reveal/ 課程網誌: https://mdecadp2018.github.io/site-40623153/blog","tags":"misc","url":"https://mdecadp2018.github.io/site-40623153/blog/pages/about/"},{"title":"Week8","text":"Onshape及Github操作 課程內容 操作後Onshape得知它是一套不須下載只要用網路就能開啟的軟體，直接只用瀏覽器，平板甚至手機也能開啟，對於現在的網路無所不在是相當方便的一套軟體。 何謂雲端:-雲端運算/用多少開多少/用多少付多少/彈性高負擔少。 心得 學期已經過了一半，對於onshape及github的操作已經熟悉許多，包括blog、reveal的編輯和一些故障排除，在onshape全英文之下，可以藉機培養自己的英文能力，希望能藉由這門課學到很多。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog8.html"},{"title":"Week7","text":"網際網路協定部分更改及Github遠端故障 操作內容 1.網際網路第4版協定部分更改: DNS 140.130.17.3 140.130.1.2 2.介紹第六版協定部分: 2001:288:6004:17::3(系) 2001:288:6004:1::2 (校) 2001:b000:168::1(hinet) Github遠端故障 原因: 整體來講是因為網路故障產生問題且儲存的個人倉儲之位置也發生故障，導致多數人進行遠端傳送時有些許的問題出現,但近端仍有更改成功。 心得 在這週github上傳頻頻出現錯誤，這讓我感到不知所措同時也詢問過很多同學，假設我只知道使用github一個遠端倉儲，而不會去連上其他可用的替代倉儲，那很可能會導致自己的資料在需要使用時無法及時更新，但這也需花時間去充分了解後才能做出應對處理，但遇到問題也才能有更多學習機會。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog7.html"},{"title":"Week6","text":"將個人倉儲中的flaskapp.py更新至最新版本 操作內容 1.上網搜尋github cmsimfly找到flaskapp.py並點入 2.將自己資料夾中的flaskapp.py拉進SciTE並將網路上的flaskapp.py內容複製並覆蓋掉原本的內容 3.打開Cmsimfly .leo 4.按Ctrl+i複製一個@clean flaskapp.py並將clean改成auto再把原本的@clean flaskapp.py刪掉後即可 5.人、事、時、地、物介紹及說明 心得 這週在進端編輯完成後遇到一些小問題，導致無法上傳至遠端，發現檔名不能互相覆蓋到及有些資料尚未合併，需先執行\"git pull\"指令後將資料合併在\"git push\"後即可成功上傳，雖然操作過程偶爾會遇到問題，但這也是額外的除錯學習機會。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog6.html"},{"title":"Week5","text":"Reveal、Pelican、Blog及Onshape操作練習 操作內容 1.學會Reveal、Pelican、Blog的編輯方法及近遠端轉換。 2.在blog部分使用leo來進行編譯、新增章節及內容等。 3.簡報部分學會修改簡報順序與排版、字體設置。 4.Onshape week2之繪圖操作練習。 心得 本週初次了解python的語法與架構，但對剛接觸這塊的我來說，這部分顯得有些困難，但經過練習後，一定能夠更加熟悉。老師本週介紹了所有架構模式，並清楚地將所有連結都詳細條列表示，很值得我們深入去認識這些架構的詳細部分，在onshape操作上也更為習慣且順暢許多。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog5.html"},{"title":"Week4","text":"操作Onshape實習 操作內容 1.認識並學習使用Onshpae繪製簡單圖形 2.建立 Onshape 帳號 - 請利用學校 gmail 建立教育版帳號 3.3D環境導航 ( navigate ) 4.說明草圖 ( sketch-based )的介紹 4個基本特徵 (features)、擠出 ( extrude )、旋轉 ( revolve )、掃描 ( sweep )和斷面混成 ( loaf ) 5. onshape1-1Plan 閱讀此文章並將陌生單字翻譯後記錄在筆記 心得 這禮拜摸索過才發現跟之前用的3D繪圖軟體差異不大，雖有些操作功能還不熟悉，看完基本介紹後已經能畫出來基本圖形了，但因之前都是自行設定功能的指令，在操作上有些不習慣，相信多操作後能夠架輕就熟。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog4.html"},{"title":"Week3","text":"管理個人進端與遠端之編輯及轉換 操作內容 1.到個人的動態https:localhost:8443內編輯內容,login(admin) 2.開始每周維護自己的網站內容 3.處理好後按generate_pages進行動態分頁轉至靜態分頁 4.開啟自己的Scite程式,到資料夾開啟http-server.py，並在tool點選Go 5.再到瀏覽器上打入https:localhost:8444檢查是否開啟及轉換成功 6.確認後回到黑框打入git add . git commit -m git push 等指令上傳至遠端 心得 經過了前二週的操作之後，對於github網站更為熟悉，也更進一步了解git的使用指令及使用時機，在https:localhost:8443更改完後,按generate_pages, 將動態分頁轉為靜態分頁，完成後再到https:localhost:8444檢查是否轉換成功，回到程式碼視窗打上git add . git status . git push等指令上傳至遠端，養成定期維護的習慣。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog3.html"},{"title":"Week2","text":"管理個人CMSimfly作業倉儲及ShareX錄製 操作內容 1.從Settings裡面的Branches 將master改成gh-pages 2.設定ShareX的錄音、錄影與截圖設定 3.開啟近遠端的編輯及維護個人網站 心得 這禮拜使用sharex程式錄製操作影片，在更新完近端後推到雲端上發現檔案名稱不能重複，不然會出現近遠端呈現不一致的問題，培養出定期維護自己網誌的習慣，隨時掌握自己目前的學習進度。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog2.html"},{"title":"Week1","text":"建立github倉儲 操作內容 1.先登入自己github帳號新增資料(學號.github.io) 2.認識設計系網站 mde.tw ，本課程常用兩個連結 18CADP-I 、 教學網站(Youtube教學網站 3.利用I進入github後領取作業、建立個人倉儲，開啟P37>利用git clone+個人倉儲>載下倉儲內容到個人隨身碟上 4.再將mdecourse/2018fall資料夾內的檔案複製到自己的資料夾(除了.git readme不取代) 5.開啟程式碼編輯，利用python指令開啟近端網站編輯 6.接著到瀏覽器上輸入https:localhost:8443,進去後先login ，密碼(admin) 7.輸入學號至標題 心得 第一個禮拜接觸到github，覺得有些陌生，但經過與同學討論後對github漸漸熟悉，學會操作近端與遠端開啟，並學會更改內容後上傳至雲端。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog1.html"},{"title":"2018分組網誌","text":"week1. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623153/blog/2018-Fall-Project-Blog.html"}]}